name: Deploy to Firebase Hosting

on:
  pull_request:
    branches:
      - main  # Auto-deploy preview for PRs targeting main

  workflow_dispatch:
    inputs:
      environment:
        description: 'Where to deploy'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CHANNEL_ID: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || (inputs.environment == 'production' && 'live') || format('preview-{0}', github.run_number) }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Debug workspace structure
      run: |
        echo "Current path: $(pwd)"
        echo "Contents:"
        ls -la
        echo "server dir content:"
        ls -la server || echo "❌ server/ missing!"
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install frontend dependencies
      run: npm install

    - name: Build React app with Firebase config
      run: npm run build
      env:
        VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
        VITE_BACKEND_URL: ${{ secrets.BACKEND_URL }}

    - name: Install server dependencies
      working-directory: server
      run: npm install

    - name: Debug Gemini API response
      run: |
        node server/index.js &
        PID=$!
        sleep 5
        echo 'Testing Gemini endpoint...'
        curl -s -X POST http://localhost:8080/api/autoMapItems \
          -H 'Content-Type: application/json' \
          -d '{"prompt":"test"}' || true
        kill $PID
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    - name: Deploy to Firebase (Preview or Production)
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: ${{ secrets.GITHUB_TOKEN }}
        firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        channelId: ${{ env.CHANNEL_ID }}
        CHANNEL="${CHANNEL_ID}"
        fi

        echo "Pinging $BASE_URL/api/autoMapItems"
        curl -s -X POST "$BASE_URL/api/autoMapItems" \
          -H 'Content-Type: application/json' \
          -d '{"prompt":"test"}' || true

        # repoToken: "${{ secrets.GITHUB_TOKEN }}"
        firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
        projectId: my-smart-shopper-e0c23
        channelId: >-
          ${{ github.event_name == 'pull_request'
              && format('pr-{0}', github.event.number)
              || (inputs.environment == 'production' && 'live')
              || format('preview-{0}', github.run_number) }}
        expires: 7d
        entryPoint: .
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
